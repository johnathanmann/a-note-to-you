[{"C:\\Users\\johna\\Desktop\\coding\\a-note-to-you\\client\\src\\index.js":"1","C:\\Users\\johna\\Desktop\\coding\\a-note-to-you\\client\\src\\App.js":"2","C:\\Users\\johna\\Desktop\\coding\\a-note-to-you\\client\\src\\pages\\Note.js":"3","C:\\Users\\johna\\Desktop\\coding\\a-note-to-you\\client\\src\\pages\\Homepage.js":"4","C:\\Users\\johna\\Desktop\\coding\\a-note-to-you\\client\\src\\pages\\Form.js":"5"},{"size":232,"mtime":1678752362790,"results":"6","hashOfConfig":"7"},{"size":451,"mtime":1678758162074,"results":"8","hashOfConfig":"7"},{"size":2141,"mtime":1678761943417,"results":"9","hashOfConfig":"7"},{"size":412,"mtime":1678752362792,"results":"10","hashOfConfig":"7"},{"size":6953,"mtime":1678927427987,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bpcma5",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"C:\\Users\\johna\\Desktop\\coding\\a-note-to-you\\client\\src\\index.js",[],[],"C:\\Users\\johna\\Desktop\\coding\\a-note-to-you\\client\\src\\App.js",[],[],"C:\\Users\\johna\\Desktop\\coding\\a-note-to-you\\client\\src\\pages\\Note.js",[],[],"C:\\Users\\johna\\Desktop\\coding\\a-note-to-you\\client\\src\\pages\\Homepage.js",[],[],"C:\\Users\\johna\\Desktop\\coding\\a-note-to-you\\client\\src\\pages\\Form.js",["28"],[],"import { useState, useEffect } from \"react\";\nimport $ from 'jquery';\nimport uniqid from 'uniqid';\nimport \"../styles/form.css\";\nimport pen from \"../assets/imgs/pen.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport swal from 'sweetalert';\nimport copy from 'copy-to-clipboard';\n\nimport redStar from \"../assets/imgs/red-star.png\";\nimport orangeStar from \"../assets/imgs/orange-star.png\";\nimport yellowStar from \"../assets/imgs/yellow-star.png\";\nimport greenStar from \"../assets/imgs/green-star.png\";\nimport blueStar from \"../assets/imgs/blue-star.png\";\nimport purpleStar from \"../assets/imgs/purple-star.png\";\nimport pinkStar from \"../assets/imgs/pink-star.png\";\nimport blackStar from \"../assets/imgs/black-star.png\";\n\nlet recipientName;\nlet uniqId = uniqid();\n\n\nexport default function Form(){\n    const [recipient, setRecipient] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n    const [sender, setSender] = useState(\"\")\n\n    const changeName = event => {\n        setRecipient(event.target.value);\n        uniqId = uniqid();\n        console.log(recipientName)\n    }\n    const changeBody = event => {\n        setBody(event.target.value);\n    }\n    const changeSender = event => {\n        setSender(event.target.value);\n    }\n    \n    $('#redStar').click(function(){\n        $('#note-preview h3').css({\n            'color': \"#de3232\"\n        });\n    })\n    $('#orangeStar').click(function(){\n        $('#note-preview h3').css({\n            'color': \"#f48737\"\n        });\n    })\n    $('#yellowStar').click(function(){\n        $('#note-preview h3').css({\n            'color': \"#f1cc25\"\n        });\n    })\n    $('#greenStar').click(function(){\n        $('#note-preview h3').css({\n            'color': \"#8ef063\"\n        });\n    })\n    $('#blueStar').click(function(){\n        $('#note-preview h3').css({\n            'color': \"#63acf0\"\n        });\n    })\n    $('#purpleStar').click(function(){\n        $('#note-preview h3').css({\n            'color': \"#d463f0\"\n        });\n    })\n    $('#pinkStar').click(function(){\n        $('#note-preview h3').css({\n            'color': \"#fd7bb7\"\n        });\n    })\n    $('#blackStar').click(function(){\n        $('#note-preview h3').css({\n            'color': \"#000\"\n        });\n    })\n\n    let navigate = useNavigate(); \n    const routeChange = () =>{ \n        let path ='/'\n        navigate(path);\n    }\n    \n    async function noteForm() {\n\n        recipientName = $(\"#formRecipient\").val();\n        let body = $(\"#text-box\").val();\n        let sender = $(\"#sender\").val();\n        let sticker = document.querySelector('input[name=\"sticker\"]:checked').value;\n    \n    \n        const finalUniqId = recipientName+\"-\"+uniqId;\n        copy(\"https://a-note-to-you.herokuapp.com/#/dear/\"+finalUniqId);\n        swal(\"Note share link copied\");\n    \n        if (SubmitEvent) {\n          const response = await fetch('/api/note', {\n            method: 'POST',\n            body: JSON.stringify({\n                uniqId: finalUniqId,\n                recipient: recipientName,\n                body: body,\n                sender: sender,\n                sticker: sticker\n            }),\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          });\n          if (response.ok) {\n            console.log('Note Posted');\n            $('#form-container').css({\n                    'display': 'none'\n            });\n            swal('Note share link copied')\n            routeChange()\n          } else {\n            alert(response.statusText);\n          }\n        }\n    };\n\n    return(\n        <div id=\"form-container\">\n            <div id=\"form\">\n                <img className=\"box\" alt=\"A feather pen icon button\" src={pen} id=\"static-pen\"/><h1>Write your note</h1>\n                <form>\n                    <div className=\"form-group\">\n                        <label><h2>Recipient</h2></label> <br/>\n                        <input id=\"formRecipient\"type=\"text\" className=\"form-control text-input\" onInput={changeName} value={recipient}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label><h2>Note body</h2></label> <br/>\n                        <input className=\"form-control\"  id=\"text-box\" rows=\"5\" onInput={changeBody} value={body}></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label><h2>Sender</h2></label> <br/>\n                        <input type=\"text\" id=\"sender\" className=\"form-control text-input\" onInput={changeSender} value={sender}/>\n                    </div>\n                    <div className=\"form-check\">\n                    <label><h2>Sticker</h2></label> <br/>\n                        <input type=\"radio\" className=\"form-check-input\" id=\"redStar\" value=\"red\" name=\"sticker\" required/>\n                        <label><img className=\"stamp-preview\" src={redStar} alt=\"red star icon\"/></label>\n                        <input type=\"radio\" className=\"form-check-input\" id=\"orangeStar\" value=\"orange\" name=\"sticker\" required/>\n                        <label><img className=\"stamp-preview\" src={orangeStar} alt=\"orange star icon\"/></label>\n                        <input type=\"radio\" className=\"form-check-input\" id=\"yellowStar\" value=\"yellow\" name=\"sticker\" required/>\n                        <label><img className=\"stamp-preview\" src={yellowStar} alt=\"yellow star icon\"/></label>\n                        <input type=\"radio\" className=\"form-check-input\" id=\"greenStar\" value=\"green\" name=\"sticker\" required/>\n                        <label><img className=\"stamp-preview\" src={greenStar} alt=\"green star icon\"/></label>\n                        <input type=\"radio\" className=\"form-check-input\" id=\"blueStar\" value=\"blue\" name=\"sticker\" required/>\n                        <label><img className=\"stamp-preview\" src={blueStar} alt=\"blue star icon\"/></label>\n                        <input type=\"radio\" className=\"form-check-input\" id=\"purpleStar\" value=\"purple\" name=\"sticker\" required/>\n                        <label><img className=\"stamp-preview\" src={purpleStar} alt=\"purple star icon\"/></label>\n                        <input type=\"radio\" className=\"form-check-input\" id=\"pinkStar\" value=\"pink\" name=\"sticker\" required/>\n                        <label><img className=\"stamp-preview\" src={pinkStar} alt=\"pink star icon\"/></label>\n                        <input type=\"radio\" className=\"form-check-input\" id=\"blackStar\" value=\"black\" name=\"sticker\" required/>\n                        <label><img className=\"stamp-preview\" src={blackStar} alt=\"black star icon\"/></label>\n                    </div>\n                   <button className=\"btn\" id=\"submit\" onClick={() => noteForm()}>Submit</button>\n                    </form>\n            </div>\n            <div id=\"note-preview\">\n                <h3>Dear {recipient},</h3>\n                <p>{body}</p>\n                <h3>Sincerely, <br/>{sender}</h3>\n            </div>\n        </div>\n    )\n}",{"ruleId":"29","severity":1,"message":"30","line":1,"column":20,"nodeType":"31","messageId":"32","endLine":1,"endColumn":29},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]